{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACjB,qBAAuB,iBACzB,OACE,4BACGH,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,K,gBCPpCI,EAAU,8BAuBD,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAClBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNT,WAAW,GAEb,OAAOI,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkE5BK,EAnFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,iBAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAKrBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAEGnB,MAAK,SAAAoB,GACJH,QAAQC,IAAI,qBACZP,EAASS,QAEZ,IAEHH,QAAQC,IAAI,SAAUR,EAAMW,OAAQ,SAEpC,IAmBMC,EAAcR,EAChBJ,EACAA,EAAMa,QAAO,SAAApC,GAAI,OAAuB,IAAnBA,EAAKG,aAqB9B,OACE,6BACE,qCACA,6BACE,4BAAQE,QAAS,kBAAMuB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGQ,EAAYE,KAAI,SAACrC,GAAD,OACf,kBAAC,EAAD,CACEsC,IAAKtC,EAAKW,GACVX,KAAMA,EACNC,iBAAkB,kBAhCD,SAACU,GAC1BmB,QAAQC,IAAR,uBAA4BpB,EAA5B,yBAEA,IAAMX,EAAOuB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,2BAAOzC,GAAP,IAAaG,WAAYH,EAAKG,YAE/C6B,EACUrB,EAAI8B,GACX5B,MAAK,SAAA6B,GACJlB,EAASD,EAAMc,KAAI,SAACrC,GAAD,OAAWA,EAAKW,KAAOA,EAAKX,EAAO0C,SAEvDC,OAAM,SAAAC,GACLC,MAAM,YAAD,OACS7C,EAAKI,QADd,sCAGLoB,EAASD,EAAMa,QAAO,SAAAI,GAAC,OAAIA,EAAE7B,KAAOA,SAiBRmC,CAAmB9C,EAAKW,WAGtD,0BAAMoC,SA1DY,SAACC,GACrBA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASqB,EACTb,MAAM,IAAIuC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,IAE7BtB,EACUkB,GACPrC,MAAK,SAAC6B,GACLlB,EAASD,EAAMP,OAAO0B,IACtBhB,EAAW,SAgDX,2BAAO6B,MAAO9B,EAAS+B,SA5CJ,SAACR,GACxBtB,EAAWsB,EAAMS,OAAOF,UA4CpB,4BAAQG,KAAK,UAAb,WCxDRC,IAASC,OACP,kBAAC,EAAD,CAAKrC,MAtBO,CACZ,CACEZ,GAAI,EACJP,QAAS,eACTQ,KAAM,2BACNT,WAAW,GAEb,CACEQ,GAAI,EACJP,QAAS,sCACTQ,KAAM,2BACNT,WAAW,GAEb,CACEQ,GAAI,EACJP,QAAS,+DACTQ,KAAM,2BACNT,WAAW,MAMb0D,SAASC,eAAe,W","file":"static/js/main.3ccda409.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n  ? 'make not important' : 'make important'\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n};\n\nexport default Note","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update\n}","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService  from './services/notes'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes  => {\n        console.log('promise fulfilled')\n        setNotes(initialNotes);\n      })\n  }, [])\n\n  console.log('render', notes.length, \"notes\")\n\n  const handleAddNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n    noteService\n      .create(noteObject)\n      .then((returnedNote ) => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote(\"\");\n      });\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  const toggleImportanceOf = (id) => {\n    console.log(`important of ${id} needs to be toggled`)\n\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch(error => {\n        alert(\n          `the note ${note.content} was already deleted from server.`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n  \n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note \n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)} />\n        ))}\n      </ul>\n      <form onSubmit={handleAddNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nconst notes = [\n  {\n    id: 1,\n    content: \"HTML is easy\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  },\n  {\n    id: 2,\n    content: \"Browser can execute only Javascript\",\n    date: \"2019-05-30T18:39:34.091Z\",\n    important: false,\n  },\n  {\n    id: 3,\n    content: \"GET and POST are the most important methods of HTTP protocol\",\n    date: \"2019-05-30T19:20:14.298Z\",\n    important: true,\n  },\n];\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}